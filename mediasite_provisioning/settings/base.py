"""
Django settings for MediasiteProvisioning project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

from .secure import SECURE_SETTINGS

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'mediasite',
    'canvas',
    'web',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mediasite_provisioning.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mediasite_provisioning.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = False

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_URL = '/static/'
# Used by 'collectstatic' management command
STATIC_ROOT = os.path.normpath(os.path.join(BASE_DIR, 'http_static'))

# Determines whether we provision user profiles in Mediasite. Currently
# false pending IAM discussion
CREATE_USER_PROFILES_FOR_TEACHERS = False

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': SECURE_SETTINGS.get('db_default_name', 'mediasite_provisioning'),
        'USER': SECURE_SETTINGS.get('db_default_user', 'postgres'),
        'PASSWORD': SECURE_SETTINGS.get('db_default_password'),
        'HOST': SECURE_SETTINGS.get('db_default_host', '127.0.0.1'),
        'PORT': SECURE_SETTINGS.get('db_default_port', 5432),
    }
}

# Sessions
# https://docs.djangoproject.com/en/1.9/topics/http/sessions/#module-django.contrib.sessions

# Store sessions in default cache defined below
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
# NOTE: This setting only affects the session cookie, not the expiration of the session
# being stored in the cache.  The session keys will expire according to the value of
# SESSION_COOKIE_AGE (https://docs.djangoproject.com/en/1.9/ref/settings/#session-cookie-age),
# which defaults to 2 weeks.
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Cache
# https://docs.djangoproject.com/en/1.9/ref/settings/#std:setting-CACHES

REDIS_HOST = SECURE_SETTINGS.get('redis_host', '127.0.0.1')
REDIS_PORT = SECURE_SETTINGS.get('redis_port', 6379)

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': "redis://%s:%s/0" % (REDIS_HOST, REDIS_PORT),
        'OPTIONS': {
            'PARSER_CLASS': 'redis.connection.HiredisParser'
        },
        'KEY_PREFIX': 'mediasite_provisioning',  # Provide a unique value for shared cache
        # See following for default timeout (5 minutes as of 1.7):
        # https://docs.djangoproject.com/en/1.9/ref/settings/#std:setting-CACHES-TIMEOUT
        'TIMEOUT': SECURE_SETTINGS.get('default_cache_timeout_secs', 300),
    },
}

# Turn off default Django logging
# https://docs.djangoproject.com/en/1.8/topics/logging/#disabling-logging-configuration
LOGGING_CONFIG = None

###################################################################
#
#   Configuration values to be externalized in S3
#
###################################################################

MEDIASITE_API_KEY = SECURE_SETTINGS.get('mediasite_api_key')
MEDIASITE_BASE_URL = SECURE_SETTINGS.get('mediasite_base_url')
MEDIASITE_API_PATH = SECURE_SETTINGS.get('mediasite_api_path')
MEDIASITE_API_URL = MEDIASITE_BASE_URL + MEDIASITE_API_PATH
MEDIASITE_LTI_LAUNCH_PATH = SECURE_SETTINGS.get('mediasite_lti_launch_path')
MEDIASITE_LTI_LAUNCH_URL = MEDIASITE_BASE_URL + MEDIASITE_LTI_LAUNCH_PATH
CANVAS_URL = SECURE_SETTINGS.get('canvas_url')
CANVAS_CLIENT_ID = SECURE_SETTINGS.get('canvas_client_id')
CANVAS_CLIENT_SECRET = SECURE_SETTINGS.get('canvas_client_secret')
OAUTH_REDIRECT_URI = SECURE_SETTINGS.get('oauth_redirect_uri')
MEDIASITE_USERNAME = SECURE_SETTINGS.get('mediasite_username')
MEDIASITE_PASSWORD = SECURE_SETTINGS.get('mediasite_password')
# Mediasite OAUTH defaults
OAUTH_SHARED_SECRET = SECURE_SETTINGS.get('oauth_shared_secret')
OAUTH_CONSUMER_KEY = SECURE_SETTINGS.get('oauth_consumer_key')
